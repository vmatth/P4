%% estimateSmardImpulseRespones
% Estimates the impulse responses for all loudspeaker-microphone pairs in
% the SMARD database.
%
%% Syntax: 
%# estimateSmardImpulseRespones(pathToDataFolders)
%
%% Description:
% Estimates the impulse responses for all loudspeaker-microphone pairs in
% the SMARD database using the recordings for the exponential sine sweep. 
%
% * pathToDataFolders: The path to the folders containing the raw
% recordings. The data folder names are hardcoded into the function.
%
%% Examples:
% pathToDataFolders = '/home/jkjaer/mnt/smard-fileshare';
% estimateSmardImpulseRespones(pathToDataFolders)
%
%% See also:
% exponentialSineSweepId loadSmarData
%
function estimateSmardImpulseResponses(pathToDataFolders)
    dataFolderNames = {...
        '0000_20140114-1246',...
        '0001_20140114-1323',...
        '0002_20140114-1315',...
        '0003_20140114-1259',...
        '0010_20140121-1526',...
        '0011_20140121-1554',...
        '0020_20140127-1055',...
        '0021_20140127-1311',...
        '0100_20140114-1351',...
        '0101_20140114-1333',...
        '0102_20140114-1342',...
        '0103_20140114-1359',...
        '0110_20140121-1535',...
        '0111_20140121-1544',...
        '0120_20140127-1103',...
        '0121_20140127-1305',...
        '1000_20140114-1504',...
        '1001_20140114-1530',...
        '1002_20140114-1514',...
        '1003_20140114-1440',...
        '1010_20140121-1513',...
        '1011_20140121-1447',...
        '1020_20140127-1113',...
        '1021_20140127-1256',...
        '1100_20140114-1611',...
        '1101_20140114-1538',...
        '1102_20140114-1549',...
        '1103_20140114-1603',...
        '1110_20140121-1502',...
        '1111_20140121-1455',...
        '1120_20140127-1122',...
        '1121_20140127-1249',...
        '2000_20140121-1125',...
        '2001_20140121-1108',...
        '2002_20140121-1116',...
        '2003_20140121-1210',...
        '2010_20140121-1350',...
        '2011_20140121-1437',...
        '2020_20140127-1218',...
        '2021_20140127-1233',...
        '2100_20140121-1046',...
        '2101_20140121-1101',...
        '2102_20140121-1053',...
        '2103_20140121-1029',...
        '2110_20140121-1357',...
        '2111_20140121-1414',...
        '2120_20140127-1211',...
        '2121_20140127-1240'
        };
    nDataFolders = length(dataFolderNames);
    audioName = 'exp_swept_sinus_10Hz_24kHz';
    tmpPath = 'tmp';
    for iDataFolder = 1:nDataFolders
        % create a temporary directory
        mkdir(tmpPath);
        % load the data 
        iPath = [pathToDataFolders, '/', dataFolderNames{iDataFolder}];
        smarData = loadSmarData(iPath,audioName);
        % the loop back signal is in column 8 of the data matrix
        sweptSinusoidalSourceSignal = smarData.dataMatrix(:,8);
        % sine sweep setup
        samplingFreq = smarData.setup.fs;
        startFreq = 10;
        stopFreq = samplingFreq/2;
        sweepTime = 10;
        silenceTime = 2;
        sweepAmp = 0.2;
        % the mic channel numbers corresponds to the column number in the
        % data matrix
        micChannels = smarData.setup.recConf.mic.ch;
        nMics = length(micChannels);
        % configuration number
        confNumberStr = num2str(smarData.setup.confNo,'%04d');
        disp(['Estimating impulse responses for configuration number ', ...
            confNumberStr,'.']);
        for jMic = 1:nMics
            micChannel = micChannels(jMic);
            micName = smarData.setup.recConf.mic.name{jMic};
            recordedSignal = smarData.dataMatrix(:,micChannel);
            estimatedImpulseReponse = exponentialSineSweepId(...
                sweptSinusoidalSourceSignal,recordedSignal,startFreq,...
                stopFreq,samplingFreq,sweepTime,sweepAmp,silenceTime);
            fileName = [confNumberStr, '_estimated_ir_ch', ...
                num2str(micChannel,'%02d'), '_', micName,'.wav'];
            filePath = [tmpPath, '/', fileName];
            audiowrite(filePath,estimatedImpulseReponse,samplingFreq,...
                'BitsPerSample',24);
        end
        % copy the configuration files to the tmp folder
        copyfile([iPath,'/setup.txt'],[tmpPath,'/setup.txt']);  
        copyfile([iPath,'/setup.png'],[tmpPath,'/setup.png']);
        copyfile([iPath,'/setup_data.mat'],[tmpPath,'/setup_data.mat']);
        % zip all files in the tmp path
        zipFileName = [confNumberStr, '_estimated_ir.zip'];
        zipPath = [pathToDataFolders, '/data/', zipFileName];
        zip(zipPath,{'*.wav','setup.txt','setup.png','setup_data.mat'},tmpPath);
        % delete the temporary audio files
        rmdir(tmpPath,'s');
    end
end
